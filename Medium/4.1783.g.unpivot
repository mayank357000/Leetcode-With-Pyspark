1783. Grand Slam Titles
SQL Schema
Table: Players

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| player_id      | int     |
| player_name    | varchar |
+----------------+---------+
player_id is the primary key for this table.
Each row in this table contains the name and the ID of a tennis player.

Table: Championships

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| year          | int     |
| Wimbledon     | int     |
| Fr_open       | int     |
| US_open       | int     |
| Au_open       | int     |
+---------------+---------+
year is the primary key for this table.
Each row of this table containts the IDs of the players who won one each tennis tournament of the grand slam.

Write an SQL query to report the number of grand slam tournaments won by each player. Do not include the players who did not win any tournament.

Return the result table in any order.

The query result format is in the following example:

Players table:
+-----------+-------------+
| player_id | player_name |
+-----------+-------------+
| 1         | Nadal       |
| 2         | Federer     |
| 3         | Novak       |
+-----------+-------------+

Championships table:
+------+-----------+---------+---------+---------+
| year | Wimbledon | Fr_open | US_open | Au_open |
+------+-----------+---------+---------+---------+
| 2018 | 1         | 1       | 1       | 1       |
| 2019 | 1         | 1       | 2       | 2       |
| 2020 | 2         | 1       | 2       | 2       |
+------+-----------+---------+---------+---------+

Result table:
+-----------+-------------+-------------------+
| player_id | player_name | grand_slams_count |
+-----------+-------------+-------------------+
| 2         | Federer     | 5                 |
| 1         | Nadal       | 7                 |
+-----------+-------------+-------------------+

Player 1 (Nadal) won 7 titles: Wimbledon (2018, 2019), Fr_open (2018, 2019, 2020), US_open (2018), and Au_open (2018).
Player 2 (Federer) won 5 titles: Wimbledon (2020), US_open (2019, 2020), and Au_open (2019, 2020).
Player 3 (Novak) did not win anything, we did not include them in the result table.

WITH cte AS (
  SELECT Wimbledon AS player_id FROM Championships
  UNION ALL
  SELECT Fr_open FROM Championships
  UNION ALL
  SELECT US_open FROM Championships
  UNION ALL
  SELECT Au_open FROM Championships
)
SELECT 
  p.player_id,
  p.player_name,
  COUNT(*) AS grand_slams_count
FROM cte
JOIN Players p ON cte.player_id = p.player_id
GROUP BY p.player_id, p.player_name;

---------------------

from pyspark.sql import SparkSession
from pyspark.sql.functions import col, count
from pyspark.sql import functions as F

# Sample data
players_data = [(1, "Nadal"), (2, "Federer"), (3, "Novak")]
championships_data = [
    (2018, 1, 1, 1, 1),
    (2019, 1, 1, 2, 2),
    (2020, 2, 1, 2, 2)
]

spark = SparkSession.builder.getOrCreate()

players_df = spark.createDataFrame(players_data, ["player_id", "player_name"])
champs_df = spark.createDataFrame(championships_data, ["year", "Wimbledon", "Fr_open", "US_open", "Au_open"])

union_df = champs_df.selectExpr("Wimbledon AS player_id") \
    .union(champs_df.selectExpr("Fr_open AS player_id")) \
    .union(champs_df.selectExpr("US_open AS player_id")) \
    .union(champs_df.selectExpr("Au_open AS player_id"))

#df.union(df2).distinct() if want union of sql, unino here is union all of sql

titles_df = union_df.groupBy("player_id").agg(count("*").alias("grand_slams_count"))

result_df = titles_df.join(players_df, "player_id")

result_df.show()