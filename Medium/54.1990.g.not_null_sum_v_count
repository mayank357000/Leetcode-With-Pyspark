1990. Count the Number of Experiments

Description
Table: Experiments

+-----------------+------+
| Column Name     | Type |
+-----------------+------+
| experiment_id   | int  |
| platform        | enum |
| experiment_name | enum |
+-----------------+------+
experiment_id is the primary key for this table.
platform is an enum with one of the values ('Android', 'IOS', 'Web').
experiment_name is an enum with one of the values ('Reading', 'Sports', 'Programming').
This table contains information about the 
ID of an experiment done with a random person, 
the platform used to do the experiment, and the name of the experiment.
Write an SQL query to report 
the number of experiments done on each of the three platforms 
for each of the three given experiments. 
Notice that all the pairs of (platform, experiment) 
should be included in the output including the pairs with zero experiments.

Return the result table in any order.

The query result format is in the following example.

Example 1:

Input:
Experiments table:
+---------------+----------+-----------------+
| experiment_id | platform | experiment_name |
+---------------+----------+-----------------+
| 4             | IOS      | Programming     |
| 13            | IOS      | Sports          |
| 14            | Android  | Reading         |
| 8             | Web      | Reading         |
| 12            | Web      | Reading         |
| 18            | Web      | Programming     |
+---------------+----------+-----------------+
Output: 
+----------+-----------------+-----------------+
| platform | experiment_name | num_experiments |
+----------+-----------------+-----------------+
| Android  | Reading         | 1               |
| Android  | Sports          | 0               |
| Android  | Programming     | 0               |
| IOS      | Reading         | 0               |
| IOS      | Sports          | 1               |
| IOS      | Programming     | 1               |
| Web      | Reading         | 2               |
| Web      | Sports          | 0               |
| Web      | Programming     | 1               |
+----------+-----------------+-----------------+
Explanation: 
On the platform "Android", we had only one "Reading" experiment.
On the platform "IOS", we had one "Sports" experiment and one "Programming" experiment.
On the platform "Web", we had two "Reading" experiments and one "Programming" experiment.

-----------------------------------

WITH DistinctPlatforms AS (
    SELECT DISTINCT platform
    FROM Experiments
),
DistinctExperiments AS (
    SELECT DISTINCT experiment_name
    FROM Experiments
),
AllCombinations AS (
    SELECT p.platform, e.experiment_name
    FROM DistinctPlatforms p
    CROSS JOIN DistinctExperiments e
)
SELECT 
    ac.platform,
    ac.experiment_name,
    COUNT(exp.experiment_id) AS num_experiments
FROM AllCombinations ac
LEFT JOIN Experiments exp
    ON ac.platform = exp.platform
   AND ac.experiment_name = exp.experiment_name
GROUP BY ac.platform, ac.experiment_name;

OR

SELECT 
    ac.platform,
    ac.experiment_name,
    SUM(CASE WHEN exp.experiment_id IS NOT NULL THEN 1 ELSE 0 END) AS num_experiments
FROM AllCombinations ac
LEFT JOIN Experiments exp
    ON ac.platform = exp.platform
   AND ac.experiment_name = exp.experiment_name
GROUP BY ac.platform, ac.experiment_name;

---------------------------------------------------
from pyspark.sql import SparkSession
from pyspark.sql.functions import count

platforms_df = df.select("platform").distinct()
experiments_df = df.select("experiment_name").distinct()

all_combinations = platforms_df.crossJoin(experiments_df)

joined_df = (
    all_combinations.join(
        df,
        on=["platform", "experiment_name"],
        how="left"
    )
)

result_df = (
    joined_df.groupBy("platform", "experiment_name")
             .agg(count("experiment_id").alias("num_experiments"))
)

result_df.show()

OR

from pyspark.sql.functions import when, sum as _sum

result_df = (
    joined_df.groupBy("platform", "experiment_name")
             .agg(_sum(when(col("experiment_id").isNotNull(), 1).otherwise(0)).alias("num_experiments"))
)