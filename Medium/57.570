570. Managers with at Least 5 Direct Reports
Table: Employee

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
| department  | varchar |
| managerId   | int     |
+-------------+---------+
id is the primary key (column with unique values) for this table.
Each row of this table indicates the name of an employee, their department, and the id of their manager.
If managerId is null, then the employee does not have a manager.
No employee will be the manager of themself.
 
Write a solution to find managers with at least five direct reports.

Return the result table in any order.

The result format is in the following example.

Example 1:

Input: 
Employee table:
+-----+-------+------------+-----------+
| id  | name  | department | managerId |
+-----+-------+------------+-----------+
| 101 | John  | A          | null      |
| 102 | Dan   | A          | 101       |
| 103 | James | A          | 101       |
| 104 | Amy   | A          | 101       |
| 105 | Anne  | A          | 101       |
| 106 | Ron   | B          | 101       |
+-----+-------+------------+-----------+

Output: 
+------+
| name |
+------+
| John |
+------+

-------------------------

WITH cte1 AS (
    SELECT managerId
    FROM Employee
    WHERE managerId IS NOT NULL
    GROUP BY managerId
    HAVING COUNT(*) >= 5
)
SELECT name
FROM Employee
WHERE id IN (SELECT managerId FROM cte1);

OR

WITH cte1 AS (
    SELECT managerId, COUNT(*) AS num_reports
    FROM Employee
    WHERE managerId IS NOT NULL
    GROUP BY managerId
    HAVING COUNT(*) >= 5
)
SELECT e.name, c.num_reports
FROM Employee e
JOIN cte1 c ON e.id = c.managerId;

---------------------------

from pyspark.sql import functions as F

manager_counts = (
    employee_df
    .filter(F.col("managerId").isNotNull())
    .groupBy("managerId")
    .agg(F.count("*").alias("num_reports"))
    .filter(F.col("num_reports") >= 5)
)

managers_with_5_reports = (
    manager_counts
    .join(employee_df, manager_counts.managerId == employee_df.id)
    .select(employee_df.name)
)

OR

ranked_managers = (
    employee_df
    .filter(F.col("managerId").isNotNull())
    .groupBy("managerId")
    .agg(F.count("*").alias("num_reports"))
    .join(employee_df, F.col("managerId") == employee_df.id)
    .select(employee_df.name, "num_reports")
    .orderBy(F.col("num_reports").desc())
)



